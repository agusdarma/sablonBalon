<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    Copyright 2010 The myBatis Team

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<mapper namespace="com.jakarta.software.web.mapper.PasswordMapper">
    
    <insert id="createPassHistory" parameterType="PasswordHistory" useGeneratedKeys="true" keyProperty="U5PK">
    	insert into user_password_history(user_id, sequence, old_password1, old_password2, old_password3, old_password4, old_password5, old_password6) 
    	values(#{userId}, '1', 
    	 #{passHistory1,javaType=java.lang.String,jdbcType=VARCHAR},
    	 #{passHistory2,javaType=java.lang.String,jdbcType=VARCHAR},
    	 #{passHistory3,javaType=java.lang.String,jdbcType=VARCHAR},
    	 #{passHistory4,javaType=java.lang.String,jdbcType=VARCHAR},
    	 #{passHistory5,javaType=java.lang.String,jdbcType=VARCHAR},
    	 #{passHistory6,javaType=java.lang.String,jdbcType=VARCHAR})
    	 <selectKey resultType="java.lang.Integer" keyProperty="id">
				SELECT user_password_history_seq.CURRVAL FROM dual
			</selectKey>	
    </insert>
    
     <select id="countResetPasswordUserByParam" parameterType="UserDataParamVO" resultType="java.lang.Integer">
        SELECT count(ud.id) as count 
		FROM user_data ud
		INNER JOIN branch_data bd ON ud.branch_id = bd.id
		INNER JOIN user_level ul ON ul.id = ud.level_id
		left join lookup_data l on ud.user_status=l.lookup_value and l.lookup_cat=1
		inner join user_data ud1 on ud1.id = ud.created_by
		inner join user_data ud2 on ud2.id = ud.updated_by
		<where>
	      	<if test="userCode != null and userCode.length() > 0">
	       		AND upper(ud.user_code) like concat('%', concat(upper(#{userCode}), '%'))
	      	</if>
	      	<if test="userName != null and userName.length() > 0">
	       		AND upper(ud.user_name) like concat('%', concat(upper(#{userName}), '%'))
	      	</if>
	       	 and upper(ud.user_code) != 'ROOT'
		</where>    
	</select>
     
   <select id="findResetPasswordUserByParam" resultType="UserDataVO" parameterType="UserDataParamVO">
		SELECT * FROM(
			SELECT  q.*, rownum as seqNo 
			FROM(
				select
		          <include refid="_sqlResetPasswordUserData"/>
				from user_data ud
				INNER JOIN branch_data bd ON ud.branch_id = bd.id
				INNER JOIN user_level ul ON ul.id = ud.level_id
				left join lookup_data l on ud.user_status=l.lookup_value and l.lookup_cat=1
				inner join user_data ud1 on ud1.id = ud.created_by
				inner join user_data ud2 on ud2.id = ud.updated_by
				<where>
			      	<if test="userCode != null and userCode.length() > 0">
			       		AND upper(ud.user_code) like concat('%', concat(upper(#{userCode}), '%'))
			      	</if>
			      	<if test="userName != null and userName.length() > 0">
			       		AND upper(ud.user_name) like concat('%', concat(upper(#{userName}), '%'))
			      	</if>
			       	 and upper(ud.user_code) != 'ROOT'
				</where>    
				ORDER BY ${sortVariable} ${sortOrder}
	 		) q
		WHERE  rownum &lt;= #{rowEnd})
		WHERE seqNo >= #{rowStart}
    </select>
    
</mapper>