<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	Copyright 2010 The myBatis Team

	Licensed under the Apache License, Version 2.0 (the "License")
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->

<mapper namespace="com.jakarta.software.web.mapper.ProductMapper">

	<sql id="_sqlProduct">
		p.id as id,
		p.product_type as productType,
		p.product_code as productCode,
		p.product_name as productName,
		p.created_on as createdOn,
		p.created_by as createdBy,
		p.updated_on as updatedOn,
		p.updated_by as updatedBy,
		p.institution_code as institutionCode,
		p.status as status
	</sql>

	<select id="selectProduct" resultType="Product">
		select <include refid="_sqlProduct" />
		from product p
	</select>

	<update id="updateProduct" parameterType="Product" >
		update product 
		set product_type = #{productType},
			product_code = #{productCode},
			product_name = #{productName},
			updated_on = #{updatedOn},
			updated_by = #{updatedBy},
			institution_code = #{institutionCode},
			status = #{status}
		where id=#{id}
	</update>


	<select id="selectProductById" resultType="Product" parameterType="java.lang.Integer">
 		select <include refid="_sqlProduct" />
		from product p
		where id=#{value}
	</select>

	<select id="selectProductValueByProductId" resultType="ProductValue" parameterType="java.lang.Integer">
		select <include refid="_sqlProductValue" />,
			ud1.user_name as createdByDisplay,
			ud2.user_name as updatedByDisplay
		from product_value pv 
			inner join user_data ud1 on ud1.id = pv.created_by
			inner join user_data ud2 on ud2.id = pv.updated_by
		where pv.product_id=#{value}
		order by product_value asc
	</select>

	<update id="updateProductValue" parameterType="ProductValue" >
		update product_value 
		set product_id = #{productId},
			product_value = #{productValue},
			updated_by = #{updatedBy},
			updated_on = #{updatedOn}
		where id=#{id}
	</update>

	<select id="countProductValueByProductValueAndProductId" resultType="java.lang.Integer" parameterType="java.util.Map">
 		select count(1)
		from product_value
		where product_id=#{productId} and product_value=#{productValue}
	</select>

	<delete id="deleteProductValue" parameterType="java.lang.Integer">
 		delete
 		from product_value
 		where id=#{value}
	</delete>
	
	<select id="checkDuplicateProduct" resultType="java.lang.Integer" parameterType="Product">
	    select count(1)
	    from product
	    where product_type=#{productType} and product_code=#{productCode}
	</select>
	
 </mapper>