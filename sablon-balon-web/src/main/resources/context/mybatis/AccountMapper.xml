<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Copyright 2010 The myBatis Team Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
	
<mapper namespace="com.jakarta.software.web.mapper.AccountMapper">
	<sql id="_sqlAccount">
		a.account_no as accountNo,
		a.card_no as cardNo,
		a.account_type as accountType,
		a.acc_index as accIndex,
		a.status as status,
		a.remarks as remarks,
		a.created_on as createdOn,
		a.created_by as createdBy,
		a.updated_on as updatedOn,
		a.updated_by as updatedBy
	</sql>
	
	
	
	<insert id="createAccount" parameterType="Account" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO account 
    	(cif_id, account_no, card_no, account_type, 
    	acc_index, status, remarks, created_on, 
    	created_by, updated_on, updated_by)
    	values (
    	#{cifId},
    	#{accountNo},
    	#{cardNo},
    	#{accountType}, 
    	#{accIndex},
    	#{status}, 
    	#{remarks}, 
    	#{createdOn}, 
    	#{createdBy}, 
    	#{updatedOn}, 
    	#{updatedBy}
    	)
	</insert>
	
	<select id="findByAccountNo" parameterType="java.util.Map" resultType="Account">
		select <include refid="_sqlAccount"/> 
		from account a
		where a.cif_id = #{cifId} and a.account_no = #{accountNo}
	</select>
	
	<delete id="deleteAccount" parameterType="java.lang.Integer" >
	    DELETE from account where cif_id=#{value}
	</delete>
	
	 <update id="authorizeAccount" parameterType="Account" >
    	update account set 
    		cif_id=#{cifId}, 
    		account_no=#{accountNo}, 
    		card_no=#{cardNo}, 
    		account_type=#{accountType}, 
    		acc_index=#{accIndex}, 
    		status=#{status}, 
    		remarks=#{remarks}, 
    		updated_on=#{updatedOn}, 
    		updated_by=#{updatedBy}
    	where cif_id=#{cifId} and account_no=#{accountNo}
    </update>
    
    <update id="updateAccount" parameterType="Account" >
    	update account set 
    		cif_id=#{cifId}, 
    		account_no=#{accountNo}, 
    		card_no=#{cardNo}, 
    		account_type=#{accountType}, 
    		acc_index=#{accIndex}, 
    		status=#{status}, 
    		remarks=#{remarks}, 
    		updated_on=#{updatedOn}, 
    		updated_by=#{updatedBy}
    	where cif_id=#{cifId} and account_no=#{accountNo}
    </update>
    
    <update id="updateAccountByCifId" parameterType="Account" >
    	update account 
    	set auth_status=#{authStatus}, 
    		updated_on=#{updatedOn}, 
    		updated_by=#{updatedBy}
    	where cif_id=#{cifId}
    </update>
    
    <update id="updateAccountStatusByListAccountId" parameterType="GeneralStatusVO">
		update account
		set 
			<if test="status != null" >
				status = #{status},
			</if>
			auth_status = #{authStatus},
			updated_by = #{updatedBy},  
			updated_on = #{updatedOn}
		where id in 
		<foreach item="id" index="index" collection="listId" open="(" separator="," close=")">
         	#{id}
        </foreach>
	</update>
	
    <select id="findListAccById" parameterType="java.lang.Integer" resultType="Account">
		select <include refid="_sqlAccount"/> 
		from account a
		where a.cif_id = #{value}
	</select>
    
    <select id="findListAccByCifId" parameterType="java.lang.Integer" resultType="Account">
		select <include refid="_sqlAccount"/> 
		from account a
		where a.cif_id= #{value}
	</select>
	
	<select id="findListAccHistById" parameterType="java.lang.Integer" resultType="AccountHistory">
		select 
			a.id as id,
			a.cif_id_history as cifIdHistory,
			a.account_no as accountNo,
			a.card_no as cardNo,
			a.account_type as accountType,
			a.acc_index as accIndex,
			a.status as status,
			a.modify_status as modifyStatus,
			a.remarks as remarks,
			a.created_on as createdOn,
			a.created_by as createdBy,
			a.updated_on as updatedOn,
			a.updated_by as updatedBy
		from account_history a
		where a.cif_id_history = #{cifIdHistory}
	</select>
		
	<insert id="createAccountHistory" parameterType="AccountHistory" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO account_history(
			cif_id_history,
	    	account_no,
	    	card_no,
	    	account_type,
	    	modify_status, 
	    	acc_index,
	    	status, 
	    	remarks, 
	    	created_on, 
	    	created_by, 
	    	updated_on, 
	    	updated_by)
    	values (
	    	#{cifIdHistory},
	    	#{accountNo},
	    	#{cardNo},
	    	#{accountType}, 
	    	#{modifyStatus},
	    	#{accIndex},
	    	#{status}, 
	    	#{remarks}, 
	    	#{createdOn}, 
	    	#{createdBy}, 
	    	#{updatedOn}, 
	    	#{updatedBy}
    	)
	</insert>
	
	<select id="checkAccountHistoryByAccNo" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1)
		from account_history a
			inner join cif_history ch on ch.id = a.cif_id_history and ch.auth_status='Y'
		where a.account_no = #{accountNo} and a.status='A'
	</select>
	
	<select id="checkAccountByAccNo" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) 
		from account_history a
			inner join cif_history ch on ch.id = a.cif_id_history and ch.auth_status='Y'
		where a.account_no = #{accountNo} and a.status='A'
	</select>
	
</mapper>