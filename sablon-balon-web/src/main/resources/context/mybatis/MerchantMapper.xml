<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    Copyright 2010 The myBatis Team

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<mapper namespace="com.jakarta.software.web.mapper.MerchantMapper">
   
 	<update id="updateMerchant" parameterType="Merchant">
 	    update merchant
		set	merchant_name = #{merchantName},
			alias    	  = #{alias},
			account_type  = #{accountType},			
			account_number= #{accountNumber},			
			currency      = #{currency},			
			timeout       = #{timeout},			
			status  	  = #{status},			
			auth_status   = #{authStatus},			
			updated_by    = #{updatedBy},
			updated_on    = #{updatedOn},
			auth_on		  = #{authOn},
			auth_by		  = #{authBy}
		where id 	      = #{id} 
 	</update>
    
 	<update id="updateMerchantHistory" parameterType="Merchant">
 	    update merchant_history
		set	merchant_name={merchantName},
			alias=#{alias},
			account_type=#{accountType},			
			account_number=#{accountNumber},			
			currency=#{currency},			
			timeout=#{timeout},			
			status=#{status},			
			auth_status=#{authStatus},			
			updated_by=#{updatedBy},
			updated_on=#{updatedOn},
			auth_on=#{authOn},
			auth_by=#{authBy}
		where id=#{id} 
 	</update>
 	
 	<sql id="_sqlMerchant">
 	    m.id as id,
 	    rtrim(m.merchant_code) as merchantCode,
 	    m.merchant_name as merchantName,
 	    m.alias as alias,
 	    m.account_type as accountType,
 	    m.account_number as accountNumber,
 	    m.currency as currency,
 	    m.timeout as timeout,
 	    m.status as status,
 	    m.auth_status as authStatus,
 	    m.created_on as createdOn,
 	    m.created_by as createdBy,
 	    m.auth_on as authOn,
 	    m.auth_by as authBy,
 	    m.updated_on as updatedOn,
 	    m.updated_by as updatedBy
 	</sql>
 	
 	<select id="findMerchantByMerchantCode" parameterType="java.lang.String" resultType="Merchant">
 	    SELECT <include refid="_sqlMerchant"/>
 	    FROM merchant m
 	    where upper(m.merchant_code) = #{merchantCode} 	   
 	</select>
 	
 	<select id="findMerchantHistoryByMerchantCode" parameterType="java.lang.String" resultType="Merchant">
 	    SELECT <include refid="_sqlMerchant"/>
 	    FROM merchant_history m
 	    where upper(m.merchant_code) = #{merchantCode}
 	    	and m.auth_status = 'Y' and m.merchant_id = 0
 	</select>
	
	<select id="findMerchantById" resultType="Merchant" parameterType="java.lang.Integer">
 		SELECT <include refid="_sqlMerchant"/>
		FROM merchant m
		WHERE m.id = #{value}
	</select>
	
	<select id="findMerchantHistoryByIdHistory" resultType="MerchantVO" parameterType="java.lang.Integer">
 		SELECT <include refid="_sqlMerchant"/>,
	 		m.merchant_id as merchantId,
	 		ld.lookup_desc as merchantStatusDisplay,
	 		ld1.lookup_desc as accountTypeDisplay,
	 		ld2.lookup_desc as currencyTypeDisplay,
	 		ud1.user_name as createdByDisplay,
			ud2.user_name as updatedByDisplay,
 			CASE m.merchant_id
				WHEN 0 Then 'Register'
				ELSE 'Update'
      		END as activityType			
		FROM merchant_history m
			left join lookup_data ld on ld.lookup_cat=8 and ld.lookup_value=m.status
			left join lookup_data ld1 on ld1.lookup_cat=5 and ld1.lookup_value=m.account_type
			left join lookup_data ld2 on ld2.lookup_cat=4 and ld2.lookup_value=m.currency
			inner join user_data ud1 on ud1.id = m.created_by
			inner join user_data ud2 on ud2.id = m.updated_by
		WHERE m.id = #{value}
	</select>
	
	<update id="changeMerchantAuthStatus" parameterType="MerchantVO">
		update merchant 
		set	updated_by = #{updatedBy},
			updated_on = #{updatedOn},
			auth_status=#{authStatus},
			auth_on=#{authOn},
			auth_by=#{authBy}
		where id=#{merchantId} 
    </update>
    
   	<update id="changeMerchantHistoryAuthStatus" parameterType="MerchantVO">
		update merchant_history 
		set	updated_by = #{updatedBy},
			updated_on = #{updatedOn},
			auth_status= #{authStatus},
			merchant_id= #{merchantId},
			auth_on=#{authOn},
			auth_by=#{authBy}
		where id=#{id} 
    </update>
    
</mapper>
 